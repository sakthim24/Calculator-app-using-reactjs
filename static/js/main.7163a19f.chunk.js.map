{"version":3,"sources":["process.js","screen.js","reportWebVitals.js","index.js"],"names":["Process","useState","input","setInput","Calculation","event","target","value","Clear","Delete","slice","length","err","Result","res","eval","undefined","className","id","onClick","Screen","props","type","readOnly","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"y5BAGA,SAASA,UAEP,cAA0BC,oDAAS,IAAnC,iLAAOC,MAAP,cAAcC,SAAd,cACOC,YAAc,SAACC,GACpBF,SAASD,MAAMG,EAAMC,OAAOC,QAEtBC,MAAQ,WACZL,SAAS,KAELM,OAAS,WACb,IAEAN,SAASD,MAAMQ,MAAM,EAAER,MAAMS,OAAO,IAEpC,MAAMC,GAEHT,SAAS,MAGPU,OAAS,SAATA,SACL,GAAY,KAARX,MACJ,CACI,IAAIY,IAAI,GACN,IAEMA,IAAMC,KAAKb,OAEf,MAAMU,KAEHT,SAAS,cAGRA,cADMa,IAANF,IACS,aAEAA,OAKvB,OACE,6EACA,kEAAKG,UAAU,QAAf,yBAEE,mEAAKA,UAAU,YAAf,UAEE,2DAAC,uCAAD,CAAQV,MAAOL,QACd,mEAAKe,UAAU,QAAf,UACA,qEAASC,GAAG,WAAWX,MAAM,IAAIY,QAASf,YAA1C,gBACA,qEAASc,GAAG,WAAWX,MAAM,IAAIY,QAASf,YAA1C,gBACA,qEAASc,GAAG,WAAWX,MAAM,IAAIY,QAASf,YAA1C,gBACA,qEAASc,GAAG,SAASX,MAAM,IAAIY,QAASf,YAAxC,gBACA,qEAASc,GAAG,SAASX,MAAM,IAAIY,QAASf,YAAxC,gBACA,qEAASc,GAAG,SAASX,MAAM,IAAIY,QAASf,YAAxC,gBACA,qEAASc,GAAG,SAASX,MAAM,SAASY,QAASV,OAA7C,qBACA,qEAASS,GAAG,SAASX,MAAM,IAAIY,QAASf,YAAxC,gBACA,qEAASc,GAAG,SAASX,MAAM,IAAIY,QAASf,YAAxC,gBACA,qEAASc,GAAG,SAASX,MAAM,IAAIY,QAASf,YAAxC,gBACA,qEAASc,GAAG,WAAWX,MAAM,IAAIY,QAASf,YAA1C,gBACA,qEAASc,GAAG,SAASX,MAAM,IAAIY,QAASf,YAAxC,gBACA,qEAASc,GAAG,SAASX,MAAM,IAAIY,QAASf,YAAxC,gBACA,qEAASc,GAAG,SAASX,MAAM,IAAIY,QAASf,YAAxC,gBACA,qEAASc,GAAG,WAAWX,MAAM,IAAIY,QAASf,YAA1C,gBACA,qEAASc,GAAG,WAAWX,MAAM,IAAIY,QAASf,YAA1C,gBACA,qEAASc,GAAG,SAASX,MAAM,IAAIY,QAASf,YAAxC,gBACA,qEAASc,GAAG,WAAWX,MAAM,IAAIY,QAASf,YAA1C,gBACA,qEAASc,GAAG,WAAWX,MAAM,IAAIY,QAASf,YAA1C,gBACA,qEAASc,GAAG,UAAUX,MAAM,IAAIY,QAASf,YAAzC,gBACA,qEAASc,GAAG,QAAQX,MAAM,QAAQY,QAASX,MAA3C,oBACA,qEAASU,GAAG,MAAMX,MAAM,IAAIY,QAASN,OAArC,sBA5BL,QAoCSb,+B,6BC/Ef,qBAWmBoB,IATnB,SAAgBC,GACZ,OACI,8BACE,uBAAOJ,UAAU,UAAUK,KAAK,OAAOC,UAAQ,EAAChB,MAASc,EAAMd,Y,8GCO1DiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7163a19f.chunk.js","sourcesContent":["import React,{useState} from 'react';\r\nimport Screen from './screen'\r\nimport './calc.css'\r\nfunction Process(){\r\n\r\n  const [input, setInput] = useState(\"\");\r\n   const Calculation = (event) => {\r\n    setInput(input+event.target.value)\r\n   }\r\n    const Clear = () => {\r\n      setInput(\"\")\r\n    }\r\n    const Delete = () => {\r\n      try\r\n      {\r\n      setInput(input.slice(0,input.length-1));\r\n      }\r\n      catch(err)\r\n      {\r\n         setInput(\"\")\r\n      }  \r\n    }\r\n     const Result = () => {\r\n      if (input!=='')\r\n      {\r\n          var res='';\r\n            try\r\n              {\r\n                  res = eval(input);\r\n              }\r\n              catch(err)\r\n              {\r\n                 setInput(\"Math Error\")\r\n              }\r\n              if (res===undefined)\r\n                  setInput(\"Math Error\")\r\n              else\r\n                  setInput(res)\r\n          }\r\n     }\r\n      \r\n \r\n    return(\r\n      <div>\r\n      <div className=\"title\">BODMAS CALC\r\n        </div>  \r\n        <div className=\"container\">   \r\n          \r\n          <Screen value={input} />\r\n           <div className=\"input\">\r\n           <button  id=\"operator\" value=\"(\" onClick={Calculation} > (</button>\r\n           <button  id=\"operator\" value=\")\" onClick={Calculation} > )</button>\r\n           <button  id=\"operator\" value=\"^\" onClick={Calculation} > ^</button>\r\n           <button  id=\"number\" value=\"1\" onClick={Calculation} > 1</button>\r\n           <button  id=\"number\" value=\"2\" onClick={Calculation} > 2</button>\r\n           <button  id=\"number\" value=\"3\" onClick={Calculation} > 3</button>\r\n           <button  id=\"delete\" value=\"delete\" onClick={Delete} > DELETE</button>\r\n           <button  id=\"number\" value=\"4\" onClick={Calculation} > 4</button>\r\n           <button  id=\"number\" value=\"5\" onClick={Calculation} > 5</button>\r\n           <button  id=\"number\" value=\"6\" onClick={Calculation} > 6</button>\r\n           <button  id=\"operator\" value=\"+\" onClick={Calculation} > +</button>        \r\n           <button  id=\"number\" value=\"7\" onClick={Calculation} > 7</button>\r\n           <button  id=\"number\" value=\"8\" onClick={Calculation} > 8</button>\r\n           <button  id=\"number\" value=\"9\" onClick={Calculation} > 9</button>         \r\n           <button  id=\"operator\" value=\"-\" onClick={Calculation} > -</button>\r\n           <button  id=\"operator\" value=\"/\" onClick={Calculation} > /</button> \r\n           <button  id=\"number\" value=\"0\" onClick={Calculation} > 0</button>            \r\n           <button  id=\"operator\" value=\"%\" onClick={Calculation} > %</button>          \r\n           <button  id=\"operator\" value=\"*\" onClick={Calculation} > *</button>          \r\n           <button  id=\"decimal\" value=\".\" onClick={Calculation} > .</button>        \r\n           <button  id=\"clear\" value=\"clear\" onClick={Clear} > CLEAR</button>\r\n           <button  id=\"eql\" value=\"=\" onClick={Result} > =</button>\r\n            </div>\r\n           </div>  </div>\r\n        \r\n    )\r\n}\r\n\r\n\r\nexport default Process;\r\n","import React from 'react';\r\nimport './index.css';\r\nfunction Screen(props){\r\n    return (\r\n        <div >\r\n          <input className=\"display\" type=\"text\" readOnly value = {props.value}/>\r\n        </div>\r\n      )\r\n    }\r\n      \r\n    \r\n    export default Screen\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Process from \"./process\"\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Process />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}